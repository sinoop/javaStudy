1. .equals(...) will only compare what it is written to compare, no more, no less.
2. If a class does not override the equals method, then it defaults to the equals(Object o)
   method of the closest parent class that has overridden this method.
3. If no parent classes have provided an override, then it defaults to the method from the ultimate parent class, Object,
   and so you're left with the Object#equals(Object o) method. Per the Object API this is the same as ==; that is, it returns true
   if and only if both variables refer to the same object, if their references are one and the same. Thus you will be testing
   for object equality and not functional equality.


Contract between Equals and HashCode Function:
â€¢ If two objects are equal according to the equals(Object) method,
  then calling the hashcode() method on each of the two objects must produce the same integer result.